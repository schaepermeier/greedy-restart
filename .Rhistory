geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_discrete()
scale_x_discrete?scale_x_discrete
?scale_x_discrete
impute_all_ert %>%
filter(dim == 10) %>%
ggplot(aes(fid, target, fill = ert)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,9,14,19,24))
impute_all_ert %>%
filter(dim == 10) %>%
ggplot(aes(fid, target, fill = ert)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24))
impute_all_ert %>%
filter(dim == 10) %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24))
impute_all_ert %>%
filter(dim == 10, algorithm != "GRS-LOPO") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24))
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24))
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), title = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), title = "log10 Target")
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10 Target")
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)")
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)")
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)")
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relative ERT")
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT")
impute_all_ert %>%
filter(dim == 5, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT")
impute_all_ert %>%
filter(dim == 5, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT")
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT")
ggsave("heatmap-d10-relERT.pdf", width = 5, height = 5)
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_tile() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT")
ggsave("heatmap-d10-relERT.pdf", width = 5, height = 5)
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT")
ggsave("heatmap-d10-relERT.pdf", width = 5, height = 5)
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_tile() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT")
ggsave("heatmap-d10-relERT.pdf", width = 5, height = 5)
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_raster() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT")
ggsave("heatmap-d10-relERT.pdf", width = 5, height = 5)
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_tile() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT")
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_tile() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT")
ggsave("heatmap-d10-relERT.pdf", width = 5, height = 5)
ggsave("heatmap-d10-relERT.pdf", width = 6, height = 6)
impute_all_ert %>%
filter(dim == 10, algorithm != "portfolio-best") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_tile() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT") +
theme(legend.position = "bottom")
ggsave("heatmap-d10-relERT.pdf", width = 6, height = 6)
impute_all_ert %>%
filter(dim == 10, algorithm != "GRS-LOPO") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_tile() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT") +
theme(legend.position = "bottom")
ggsave("heatmap-d10-relERT.pdf", width = 6, height = 6)
impute_all_ert %>%
filter(algorithm %in% c("portfolio-best", "GRS", "GRS-LOPO")) %>%
ggplot(aes(fid, target, fill = ert)) +
geom_tile() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT") +
theme(legend.position = "bottom")
impute_all_ert %>%
filter(algorithm %in% c("portfolio-best", "GRS", "GRS-LOPO")) %>%
ggplot(aes(fid, target, fill = ert)) +
geom_tile() +
facet_grid(vars(dim), vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT") +
theme(legend.position = "bottom")
impute_all_ert %>%
filter(algorithm %in% c("portfolio-best", "GRS", "GRS-LOPO")) %>%
ggplot(aes(fid, target, fill = ert)) +
geom_tile() +
facet_grid(vars(dim), vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "ERT") +
theme(legend.position = "bottom")
ggsave("heatmap-lopo.pdf", width = 6, height = 6)
impute_all_ert %>%
filter(algorithm %in% c("portfolio-best", "GRS", "GRS-LOPO")) %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_tile() +
facet_grid(vars(dim), vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "ERT") +
theme(legend.position = "bottom")
impute_all_ert %>%
filter(algorithm %in% c("GRS", "GRS-LOPO")) %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_tile() +
facet_grid(vars(dim), vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "ERT") +
theme(legend.position = "bottom")
impute_all_ert %>%
filter(algorithm %in% c("portfolio-best", "GRS", "GRS-LOPO")) %>%
ggplot(aes(fid, target, fill = ert)) +
geom_tile() +
facet_grid(vars(dim), vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "ERT") +
theme(legend.position = "bottom")
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_relert) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_relert) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_relert) %>% filter(algorithm == "GRS") %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_relert) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_logert) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_logert) %>% filter(algorithm == "portfolio-best") %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_logert) %>% filter(algorithm == "portfolio-best") %>% summarize(mean(mean_logert), mean(mean_ert)) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_logert) %>% filter(algorithm == "portfolio-best") %>% ungroup() %>% summarize(mean(mean_logert), mean(mean_ert)) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_logert) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>% filter(algorithm == "GRS-LOPO") %>% summarize(mean(mean_logert), mean(mean_relert)) View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>% filter(algorithm == "GRS-LOPO") %>% summarize(mean(mean_logert), mean(mean_relert)) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>% ungroup() %>%  filter(algorithm == "GRS-LOPO") %>% summarize(mean(mean_logert), mean(mean_relert)) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>% ungroup() %>%  filter(algorithm == "GRS") %>% summarize(mean(mean_logert), mean(mean_relert)) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>% ungroup() %>%  filter(algorithm == "GRS-LOPO") %>% summarize(mean(mean_logert), mean(mean_relert)) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>%  filter(algorithm == "GRS-LOPO") %>% summarize(mean(mean_logert), mean(mean_relert)) %>% View()
library(tidyverse)
library(gt)
theme_set(theme_bw())
all_ert <- read_csv("all_ert.csv") %>%
select(-"...1") %>%
mutate(algorithm = factor(algorithm, levels = c("VBS", "GRS", "GRS-LOPO", "64L", "32L", "16L", "8L", "4L", "2L", "default", "L-BFGS-B", "Powell", "SLSQP")))
all_ert$algorithm %>% table
vbs_tbl <- all_ert %>%
mutate(ert = pmin(ert, 10**7 * dim)) %>%
filter(!(algorithm %in% c("GRS", "GRS-LOPO", "portfolio-best"))) %>%
group_by(fid, dim, target) %>%
summarize(vbs = min(ert)) %>%
ungroup()
impute_all_ert <- all_ert %>%
left_join(vbs_tbl, by = c("fid", "dim", "target")) %>%
mutate(ert = pmin(ert, 10**7 * dim))
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>%  filter(algorithm == "GRS-LOPO") %>% summarize(mean(mean_logert), mean(mean_relert)) %>% View()
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>% View() # %>%  filter(algorithm == "GRS-LOPO") %>% summarize(mean(mean_logert), mean(mean_relert)) %>% View()
impute_all_ert %>%
filter(dim == 10, algorithm != "GRS-LOPO") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_tile() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT") +
theme(legend.position = "bottom")
ggsave("heatmap-d10-relERT.pdf", width = 6, height = 6)
impute_all_ert %>%
filter(algorithm %in% c("portfolio-best", "GRS", "GRS-LOPO")) %>%
ggplot(aes(fid, target, fill = ert)) +
geom_tile() +
facet_grid(vars(dim), vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "ERT") +
theme(legend.position = "bottom")
ggsave("heatmap-lopo.pdf", width = 6, height = 6)
impute_all_ert %>%
filter(algorithm %in% c("VBS", "GRS", "GRS-LOPO")) %>%
ggplot(aes(fid, target, fill = ert)) +
geom_tile() +
facet_grid(vars(dim), vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "ERT") +
theme(legend.position = "bottom")
vbs_tbl <- all_ert %>%
mutate(ert = pmin(ert, 10**7 * dim)) %>%
filter(!(algorithm %in% c("GRS", "GRS-LOPO", "VBS"))) %>%
group_by(fid, dim, target) %>%
summarize(vbs = min(ert)) %>%
ungroup()
impute_all_ert <- all_ert %>%
left_join(vbs_tbl, by = c("fid", "dim", "target")) %>%
mutate(ert = pmin(ert, 10**7 * dim))
impute_all_ert %>%
group_by(dim, algorithm) %>%
summarize(mean_ert = mean(ert), gmean_ert = exp(mean(log(ert))), mean_logert = mean(log10(ert)), mean_relert = mean(ert / vbs)) %>%
arrange(dim, mean_ert) %>% View() # %>%  filter(algorithm == "GRS-LOPO") %>% summarize(mean(mean_logert), mean(mean_relert)) %>% View()
impute_all_ert %>%
filter(dim == 10, algorithm != "GRS-LOPO") %>%
ggplot(aes(fid, target, fill = ert / vbs)) +
geom_tile() +
facet_wrap(vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "relERT") +
theme(legend.position = "bottom")
ggsave("heatmap-d10-relERT.pdf", width = 6, height = 6)
impute_all_ert %>%
filter(algorithm %in% c("VBS", "GRS", "GRS-LOPO")) %>%
ggplot(aes(fid, target, fill = ert)) +
geom_tile() +
facet_grid(vars(dim), vars(algorithm)) +
scale_fill_gradientn(colors = viridisLite::viridis(500), transform = "log10") +
scale_x_continuous(breaks = c(1,5,10,15,20,24), name = "FID") +
scale_y_continuous(breaks = c(2,0,-2,-4,-6,-8), name = "log10(target)") +
labs(fill = "ERT") +
theme(legend.position = "bottom")
ggsave("heatmap-lopo.pdf", width = 6, height = 6)
rbind(all_runtimes, all_ecdf) %>%
mutate(Problem = factor(Problem, levels = c("P1", "P2", "All"))) %>%
ggplot(aes(fevals, solved, color = Algorithm, linetype = Algorithm)) +
geom_step() +
geom_step(data = all_runtimes %>% select(Algorithm == "A1", Problem == "P1"), color = "gray") +
facet_wrap(~Problem) +
scale_color_viridis_d() +
scale_linetype_manual(values = c("dotted", "solid", "dashed")) +
theme(legend.position = "bottom") +
scale_x_log10() +
labs(x = "Function Evaluations", y = "Proportion of Problems Solved")
all_runtimes
all_runtimes %>% select(Algorithm == "A1", Problem == "P1")
rbind(all_runtimes, all_ecdf) %>%
mutate(Problem = factor(Problem, levels = c("P1", "P2", "All"))) %>%
ggplot(aes(fevals, solved, color = Algorithm, linetype = Algorithm)) +
geom_step() +
geom_step(data = all_runtimes %>% filter(Algorithm == "A1", Problem == "P1"), color = "gray") +
facet_wrap(~Problem) +
scale_color_viridis_d() +
scale_linetype_manual(values = c("dotted", "solid", "dashed")) +
theme(legend.position = "bottom") +
scale_x_log10() +
labs(x = "Function Evaluations", y = "Proportion of Problems Solved")
rbind(all_runtimes, all_ecdf) %>%
mutate(Problem = factor(Problem, levels = c("P1", "P2", "All"))) %>%
ggplot(aes(fevals, solved, color = Algorithm, linetype = Algorithm)) +
geom_step() +
# geom_step(data = all_runtimes %>% filter(Algorithm == "A1", Problem == "P1"), color = "gray") +
facet_wrap(~Problem) +
scale_color_viridis_d() +
scale_linetype_manual(values = c("dotted", "solid", "dashed")) +
theme(legend.position = "bottom") +
scale_x_log10() +
labs(x = "Function Evaluations", y = "Proportion of Problems Solved")
rbind(all_runtimes, all_ecdf) %>%
mutate(Problem = factor(Problem, levels = c("P1", "P2", "All"))) %>%
ggplot(aes(fevals, solved, color = Algorithm, linetype = Algorithm)) +
geom_step() +
facet_wrap(~Problem) +
geom_step(data = all_runtimes %>% filter(Algorithm == "A1", Problem == "P1"), color = "gray") +
scale_color_viridis_d() +
scale_linetype_manual(values = c("dotted", "solid", "dashed")) +
theme(legend.position = "bottom") +
scale_x_log10() +
labs(x = "Function Evaluations", y = "Proportion of Problems Solved")
rbind(all_runtimes, all_ecdf) %>%
mutate(Problem = factor(Problem, levels = c("P1", "P2", "All"))) %>%
ggplot(aes(fevals, solved, color = Algorithm, linetype = Algorithm)) +
geom_step() +
facet_wrap(~Problem) +
geom_step(data = all_runtimes %>% filter(Algorithm == "A1", Problem == "P1") %>% mutate(Problem = "All"), color = "gray") +
scale_color_viridis_d() +
scale_linetype_manual(values = c("dotted", "solid", "dashed")) +
theme(legend.position = "bottom") +
scale_x_log10() +
labs(x = "Function Evaluations", y = "Proportion of Problems Solved")
rbind(all_runtimes, all_ecdf) %>%
mutate(Problem = factor(Problem, levels = c("P1", "P2", "All"))) %>%
ggplot(aes(fevals, solved, color = Algorithm, linetype = Algorithm)) +
geom_step() +
facet_wrap(~Problem) +
geom_step(data = all_runtimes %>% filter(Algorithm == "A1", Problem == "P1") %>% mutate(Problem = "All"), color = "gray", linetype = "solid") +
scale_color_viridis_d() +
scale_linetype_manual(values = c("dotted", "solid", "dashed")) +
theme(legend.position = "bottom") +
scale_x_log10() +
labs(x = "Function Evaluations", y = "Proportion of Problems Solved")
rbind(all_runtimes, all_ecdf) %>%
mutate(Problem = factor(Problem, levels = c("P1", "P2", "All"))) %>%
ggplot(aes(fevals, solved, color = Algorithm, linetype = Algorithm)) +
geom_step() +
facet_wrap(~Problem) +
# geom_step(data = all_runtimes %>% filter(Algorithm == "A1", Problem == "P1") %>% mutate(Problem = "All"), color = "gray", linetype = "solid") +
scale_color_viridis_d() +
scale_linetype_manual(values = c("dotted", "solid", "dashed")) +
theme(legend.position = "bottom") +
scale_x_log10() +
labs(x = "Function Evaluations", y = "Proportion of Problems Solved")
